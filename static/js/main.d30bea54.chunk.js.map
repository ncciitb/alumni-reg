{"version":3,"sources":["ncclogo.svg","ncciitb.svg","components/confirm/confirm.tsx","components/form/form-comp.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Confirm","state","fields","name","rank","dept","mob","email","presAddr","permAddr","trPeriod","cert","job","formData","addrSame","trStart","trEnd","columns","style","marginBottom","Table","size","TableHead","TableRow","this","map","col","TableHeader","TableBody","Object","keys","key","TableCell","fontWeight","props","FormGroup","legendText","textAlign","marginTop","Button","kind","onClick","editForm","type","e","preventDefault","confirmSub","Component","FormComp","rankItems","departments","years","status","notifContent","notifTimeout","setTimeout","clearTimeout","forceUpdate","confFun","initialData","Form","TextInput","id","labelText","onChange","target","value","defaultValue","Dropdown","items","label","titleText","selectedItem","initialSelectedItem","minLength","maxLength","invalidText","TextArea","rows","Checkbox","defaultChecked","slice","index","indexOf","goToConfirmation","disabled","position","bottom","right","hideCloseButton","title","App","newState","JSON","parse","stringify","setState","fetch","method","body","then","response","a","json","data","console","log","catch","error","className","Header","top","height","aria-label","alt","src","logo","width","left","margin","color","lineHeight","fontSize","logo2","padding","submitForm","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAAe,G,MAAA,IAA0B,qCCA1B,MAA0B,oC,+EC4F1BA,E,4MAzEXC,MAAQ,G,EAERC,OAAS,CACLC,KAAM,OACNC,KAAM,cACNC,KAAM,sBACNC,IAAK,gBACLC,MAAO,gBACPC,SAAU,kBACVC,SAAU,oBACVC,SAAU,kBACVC,KAAM,eACNC,IAAK,e,EAGTC,SAAW,CACPV,KAAM,eACNC,KAAM,WACNC,KAAM,iCACNC,IAAK,aACLC,MAAO,8BACPC,SAAU,UACVM,UAAU,EACVL,SAAU,WACVM,QAAS,OACTC,MAAO,OACPL,KAAM,OACNC,IAAK,W,EAGTK,QAAU,CAAC,QAAS,c,4CAEpB,WAAU,IAAD,OACL,OAAO,gCACH,mBAAGC,MAAO,CAACC,aAAc,OAAzB,uFAGA,eAACC,EAAA,EAAD,CAAOC,KAAK,SAAZ,UACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACKC,KAAKP,QAAQQ,KAAI,SAAAC,GAAG,OACjB,cAACC,EAAA,EAAD,UAAwBD,GAANA,UAI9B,cAACE,EAAA,EAAD,UACKC,OAAOC,KAAKN,KAAKtB,QAAQuB,KAAI,SAAAM,GAE1B,OACI,eAACR,EAAA,EAAD,WACI,cAACS,EAAA,EAAD,CACId,MAAO,CAACe,WAAY,QADxB,SACkC,EAAK/B,OAAO6B,KAC9C,cAACC,EAAA,EAAD,UAAoB,aAARD,EACP,EAAKG,MAAMrB,SAASC,SAAW,EAAKoB,MAAMrB,SAASL,SAAW,EAAK0B,MAAMrB,SAASJ,SAC3E,aAARsB,EAAsB,EAAKG,MAAMrB,SAASE,QAAU,OAAS,EAAKmB,MAAMrB,SAASG,MACjF,EAAKkB,MAAMrB,SAASkB,OANbA,WAY/B,eAACI,EAAA,EAAD,CAAWC,WAAW,GAAGlB,MAAO,CAACmB,UAAW,QAASC,UAAW,OAAhE,UACI,cAACC,EAAA,EAAD,CAAQC,KAAK,YAAYnB,KAAK,QAAOoB,QAASjB,KAAKU,MAAMQ,SAAzD,kBADJ,OAGI,cAACH,EAAA,EAAD,CAAQI,KAAK,SAAStB,KAAK,QAAOoB,QAAS,SAAAG,GACvCA,EAAEC,iBACF,EAAKX,MAAMY,cAFf,+B,GAjEMC,a,gDCkKPC,G,kNA/JXC,UAAY,CAAC,QAAS,iBAAkB,WAAY,WAAY,iCAC5D,uBAAwB,wB,EAE5BC,YAAc,CAAC,wBAAyB,iCAAkC,uBAAwB,YAC9F,oBAAqB,iCAAkC,iBAAkB,yBACzE,iCAAkC,+CAClC,+BAAgC,uBAAwB,cAAe,yBACvE,gDAAiD,W,EAErDC,MAAQ,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,Q,EAEzDtC,SAAW,CACPV,KAAM,GACNC,KAAM,GACNC,KAAM,GACNC,IAAK,GACLC,MAAO,GACPC,SAAU,GACVM,UAAU,EACVL,SAAU,GACVM,QAAS,GACTC,MAAO,GACPL,KAAM,GACNC,IAAK,I,EAGTwC,QAAU,E,EACVC,aAAe,G,EACfC,aAAeC,YAAW,cACvB,G,sDAEH,WAAoB,IAAD,OACK,IAAhB/B,KAAK4B,SAuBiB,KAAtB5B,KAAK6B,cACLG,aAAahC,KAAK8B,cAClB9B,KAAK8B,aAAeC,YAAW,WAC3B,EAAKF,aAAe,GACpB,EAAKI,gBACN,KACHjC,KAAKiC,gBAELD,aAAahC,KAAK8B,cAClB9B,KAAKU,MAAMwB,QAAQlC,KAAKX,UACxBW,KAAK4B,OAAS,M,oBAItB,WAAU,IAAD,OAKL,OAJqB,IAAjB5B,KAAK4B,SACqB,IAAtB5B,KAAKU,MAAMkB,SAAc5B,KAAKX,SAAWW,KAAKU,MAAMyB,aACxDnC,KAAK4B,OAAS,GAEX,eAACQ,EAAA,EAAD,WACH,cAACzB,EAAA,EAAD,CAAWC,WAAW,GAAtB,SACI,cAACyB,EAAA,EAAD,CAAWC,GAAG,OAAOC,UAAU,OACpBC,SAAU,SAACpB,GAAD,OAAO,EAAK/B,SAASV,KAAOyC,EAAEqB,OAAOC,OAC/CC,aAAc3C,KAAKX,SAASV,SAE3C,cAACgC,EAAA,EAAD,CAAWC,WAAW,GAAtB,SACI,cAACgC,EAAA,EAAD,CAAUN,GAAG,OAAOO,MAAO7C,KAAKyB,UAAWqB,MAAM,mBACvCC,UAAU,cACVP,SAAU,SAACpB,GAAD,OAAO,EAAK/B,SAAST,KAAQwC,EAAE4B,cACzCC,oBAAqBjD,KAAKX,SAAST,SAEjD,cAAC+B,EAAA,EAAD,CAAWC,WAAW,GAAtB,SACI,cAACgC,EAAA,EAAD,CAAUN,GAAG,OAAOO,MAAO7C,KAAK0B,YAAaoB,MAAO,yBAC1CC,UAAU,sBACVP,SAAU,SAACpB,GAAD,OAAO,EAAK/B,SAASR,KAAQuC,EAAE4B,cACzCC,oBAAqBjD,KAAKX,SAASR,SAEjD,cAAC8B,EAAA,EAAD,CAAWC,WAAW,GAAtB,SACI,cAACyB,EAAA,EAAD,CAAWC,GAAG,MAAMY,UAAW,GAAIC,UAAW,GAAIZ,UAAU,gBACjDpB,KAAK,SAASiC,YAAY,wDAC1BZ,SAAU,SAACpB,GAAD,OAAO,EAAK/B,SAASP,IAAMsC,EAAEqB,OAAOC,OAC9CC,aAAc3C,KAAKX,SAASP,QAE3C,cAAC6B,EAAA,EAAD,CAAWC,WAAW,GAAtB,SACI,cAACyB,EAAA,EAAD,CAAWC,GAAG,QAAQC,UAAU,gBAAgBpB,KAAK,QAAQiC,YAAY,+BAC9DZ,SAAU,SAACpB,GAAD,OAAO,EAAK/B,SAASN,MAAQqC,EAAEqB,OAAOC,OAChDC,aAAc3C,KAAKX,SAASN,UAE3C,cAAC4B,EAAA,EAAD,CAAWC,WAAW,GAAtB,SACI,cAACyC,EAAA,EAAD,CAAUd,UAAU,kBAAkBe,KAAM,EAClCd,SAAU,SAACpB,GAAD,OAAO,EAAK/B,SAASL,SAAWoC,EAAEqB,OAAOC,OACnDC,aAAc3C,KAAKX,SAASL,aAE1C,cAAC2B,EAAA,EAAD,CAAWC,WAAW,GAAtB,SACI,cAAC2C,EAAA,EAAD,CAAUjB,GAAG,aAAaC,UAAU,uDAC1BC,SAAU,SAACpB,GACP,EAAK/B,SAASC,SAAW8B,EACzB,EAAKa,eACNuB,eAAgBxD,KAAKX,SAASC,aAE9CU,KAAKX,SAASC,SAAW,KAAO,cAACqB,EAAA,EAAD,CAAWC,WAAW,GAAtB,SAC7B,cAACyC,EAAA,EAAD,CAAUd,UAAU,oBAAoBe,KAAM,EACpCd,SAAU,SAACpB,GAAD,OAAO,EAAK/B,SAASJ,SAAWmC,EAAEqB,OAAOC,OACnDC,aAAc3C,KAAKX,SAASJ,aAE1C,eAAC0B,EAAA,EAAD,CAAWC,WAAW,sBAAtB,UACI,cAACgC,EAAA,EAAD,CAAUzB,KAAK,SAASmB,GAAG,aAAaO,MAAO7C,KAAK2B,MAAM8B,MAAM,GAAI,GAAIX,MAAM,cACpEC,UAAU,OAAOP,SAAU,SAAApB,GACjC,EAAK/B,SAASE,QAAU6B,EAAE4B,aAC1B,EAAKf,eAEPgB,oBAAqBjD,KAAKX,SAASE,UANzC,eAQ+B,KAA1BS,KAAKX,SAASE,QAAiB,KAC5B,cAACqD,EAAA,EAAD,CAAUzB,KAAK,SAASmB,GAAG,WAAWO,MAAQ,WAC1C,IAAMa,EAAQ,EAAK/B,MAAMgC,QAAQ,EAAKtE,SAASE,SAC/C,OAAO,EAAKoC,MAAM8B,MAAMC,EAAQ,EAAGA,EAAQ,GAFD,GAGxCZ,MAAM,cACFC,UAAU,KAAKP,SAAU,SAAApB,GAAC,OAAI,EAAK/B,SAASG,MAAQ4B,EAAE4B,cACtDC,oBAAqBjD,KAAKX,SAASG,WAErD,cAACmB,EAAA,EAAD,CAAWC,WAAW,GAAtB,SACI,cAACgC,EAAA,EAAD,CAAUN,GAAG,OAAOO,MAAO,CAAC,OAAQ,gBAAiB,iBAAkBC,MAAM,sBACnEC,UAAU,eAAeP,SAAU,SAAApB,GAAC,OAAI,EAAK/B,SAASF,KAAOiC,EAAE4B,cAC/DC,oBAAqBjD,KAAKX,SAASF,SAEjD,cAACwB,EAAA,EAAD,CAAWC,WAAW,GAAtB,SACI,cAACyB,EAAA,EAAD,CAAWC,GAAG,MAAMC,UAAU,cAAcC,SAAU,SAAApB,GAAC,OAAI,EAAK/B,SAASD,IAAMgC,EAAEqB,OAAOC,OAC7EC,aAAc3C,KAAKX,SAASD,QAE3C,cAACuB,EAAA,EAAD,CAAWC,WAAW,GAAGlB,MAAO,CAACmB,UAAW,SAA5C,SACI,cAACE,EAAA,EAAD,CAAQI,KAAK,SAAStB,KAAK,QAAQoB,QAAS,SAACG,GACzCA,EAAEC,iBACF,EAAKuC,oBACNC,SAAgC,KAAtB7D,KAAK6B,aAHlB,sBAKJ,qBAAKnC,MAAO,CAACoE,SAAU,QAASC,OAAQ,OAAQC,MAAO,QAAvD,SAC2B,KAAtBhE,KAAK6B,aAAsB,KACxB,cAAC,IAAD,CAAmBoC,iBAAiB,EAAMC,MAAOlE,KAAK6B,wB,GA3JnDN,cC+ER4C,E,4MAxFX1F,MAAQ,CACJmD,OAAQ,EACRvC,SAAU,I,gDAGd,WAAc,IAAD,OACT,GAA0B,IAAtBW,KAAKvB,MAAMmD,QAAsC,IAAtB5B,KAAKvB,MAAMmD,OAA1C,CACA,IACMwC,EAAWC,KAAKC,MAAMD,KAAKE,UAAUvE,KAAKvB,QAChD2F,EAASxC,OAAS,EAClB5B,KAAKwE,SAASJ,GAEdK,MALY,wCAKD,CACPC,OAAQ,OACRC,KAAMN,KAAKE,UAAUvE,KAAKvB,MAAMY,YACjCuF,KAHH,uCAGQ,WAAMC,GAAN,eAAAC,EAAA,sEACeD,EAASE,OADxB,OACEC,EADF,OAEJC,QAAQC,IAAI,WACZD,QAAQC,IAAIF,GACQ,IAAhBA,EAAKpD,QACL,EAAK4C,SAAS,CAAC5C,OAAQ,EAAGvC,SAAU,EAAKZ,MAAMY,WAL/C,2CAHR,uDAUG8F,OAAM,SAAAC,GACLH,QAAQG,MAAM,SACd,EAAKZ,SAAS,CAAC5C,OAAQ,EAAGvC,SAAU,EAAKZ,MAAMY,iB,oBAIvD,WAAU,IAAD,OACL,OACI,sBAAKgG,UAAU,MAAf,UACI,eAACC,EAAA,EAAD,CAAQ5F,MAAO,CAACoE,SAAU,SAAUyB,IAAK,EAAGC,OAAQ,OAAQC,aAAW,GAAvE,UACI,qBAAKC,IAAI,WAAWC,IAAKC,EACpBlG,MAAO,CAACmG,MAAO,OAAQ/B,SAAU,QAASgC,KAAM,OAAQP,IAAK,UAClE,sBAAK7F,MAAO,CACRqG,OAAQ,SACRlF,UAAW,SACXmF,MAAO,UACPC,WAAY,QACZC,SAAU,SALd,sBAOa,uBAAK,sBAAMxG,MAAO,CAACe,WAAY,QAA1B,oCAElB,qBAAKiF,IAAI,WAAWC,IAAKQ,EACpBzG,MAAO,CAACmG,MAAO,OAAQ/B,SAAU,QAASE,MAAO,OAAQuB,IAAK,UAEvE,qBAAKF,UAAU,OAAO3F,MAAO,CAAC0G,QAAS,UAAvC,SAC2B,IAAtBpG,KAAKvB,MAAMmD,QAAsC,IAAtB5B,KAAKvB,MAAMmD,OAAe,cAAC,EAAD,CAAUM,QAAS,SAAC8C,GAClE,EAAKR,SAAS,CAAC5C,OAAQ,EAAGvC,SAAU2F,KACrC7C,YAAanC,KAAKvB,MAAMY,SAAUuC,OAAQ5B,KAAKvB,MAAMmD,SAChC,IAAtB5B,KAAKvB,MAAMmD,OAAe,cAAC,EAAD,CAASvC,SAAUW,KAAKvB,MAAMY,SAAU6B,SAAU,WAC1E,IAAMkD,EAAWC,KAAKC,MAAMD,KAAKE,UAAU,EAAK9F,QAChD2F,EAASxC,OAAS,EAClB,EAAK4C,SAASJ,IACf9C,WAAY,WACX,EAAK+E,gBACoB,IAAtBrG,KAAKvB,MAAMmD,OACd,qBAAKlC,MAAO,CAACwG,SAAU,QAASrF,UAAW,SAAUC,UAAW,QAAhE,2BAGwB,IAAtBd,KAAKvB,MAAMmD,OACT,qBAAKlC,MAAO,CAACwG,SAAU,QAASrF,UAAW,SAAUC,UAAW,QAAhE,+EAKA,sBAAKpB,MAAO,CAACwG,SAAU,QAASrF,UAAW,SAAUC,UAAW,QAAhE,UACI,sBAAMpB,MAAO,CAACsG,MAAO,WAArB,kCADJ,wFAGI,eAACrF,EAAA,EAAD,CAAWC,WAAW,GAAGlB,MAAO,CAACoB,UAAW,QAA5C,UACI,cAACC,EAAA,EAAD,CAAQC,KAAK,YAAYnB,KAAK,QAAQoB,QAAS,WAC3C,EAAKuD,SAAS,CAAC5C,OAAQ,EAAGvC,SAAU,EAAKZ,MAAMY,YADnD,2BADJ,OAKI,cAAC0B,EAAA,EAAD,CAAQlB,KAAK,QAAQoB,QAAS,WAC1B,EAAKuD,SAAS,CAAC5C,OAAQ,EAAGvC,SAAU,EAAKZ,MAAMY,WAC/C,EAAKgH,cAFT,6C,GA5EtBC,IAAM/E,WCMTgF,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d30bea54.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ncclogo.27e553b0.svg\";","export default __webpack_public_path__ + \"static/media/ncciitb.775cef8f.svg\";","import React, {Component} from \"react\";\nimport {\n    Button,\n    FormGroup,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableHeader,\n    TableRow\n} from \"carbon-components-react\";\n\ninterface ConfirmProps {\n    formData: any,\n    editForm: Function,\n    confirmSub: Function\n}\n\nclass Confirm extends Component<ConfirmProps, {}> {\n    state = {};\n\n    fields = {\n        name: 'Name',\n        rank: 'Rank at NCC',\n        dept: 'Academic Department',\n        mob: 'Mobile Number',\n        email: 'Email Address',\n        presAddr: 'Present Address',\n        permAddr: 'Permanent Address',\n        trPeriod: 'Training Period',\n        cert: 'Certificates',\n        job: 'Present Job'\n    }\n\n    formData = {\n        name: 'Ayush Jangir',\n        rank: 'Corporal',\n        dept: 'Computer Science & Engineering',\n        mob: '8696923282',\n        email: 'ayush.jangir.0133@gmail.com',\n        presAddr: 'Antroli',\n        addrSame: true,\n        permAddr: 'Antroli2',\n        trStart: '2019',\n        trEnd: '2021',\n        cert: 'None',\n        job: 'Student'\n    }\n\n    columns = ['Field', 'Your Entry'];\n\n    render() {\n        return <div>\n            <p style={{marginBottom: '2em'}}>\n                The data you have entered is as follows. Please confirm or edit the same.\n            </p>\n            <Table size='normal'>\n                <TableHead>\n                    <TableRow>\n                        {this.columns.map(col => (\n                            <TableHeader key={col}>{col}</TableHeader>\n                        ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {Object.keys(this.fields).map(key => {\n                        const t = this;\n                        return (\n                            <TableRow key={key}>\n                                <TableCell\n                                    style={{fontWeight: 'bold'}}>{this.fields[key as keyof typeof t.fields]}</TableCell>\n                                <TableCell>{key === 'permAddr' ? (\n                                    (this.props.formData.addrSame ? this.props.formData.presAddr : this.props.formData.permAddr)\n                                ) : key === 'trPeriod' ? (this.props.formData.trStart + ' to ' + this.props.formData.trEnd) :\n                                    this.props.formData[key as keyof typeof t.props.formData]}</TableCell>\n                            </TableRow>\n                        );\n                    })}\n                </TableBody>\n            </Table>\n            <FormGroup legendText='' style={{textAlign: 'right', marginTop: '1em'}}>\n                <Button kind='secondary' size='small'onClick={this.props.editForm}>Edit</Button>\n                &nbsp;\n                <Button type='submit' size='small'onClick={e => {\n                    e.preventDefault();\n                    this.props.confirmSub();\n                }}>Confirm</Button>\n            </FormGroup>\n        </div>;\n    }\n}\n\nexport default Confirm;","import React, {Component} from \"react\";\nimport {\n    Button,\n    Checkbox,\n    Dropdown,\n    Form,\n    FormGroup,\n    TextArea,\n    TextInput,\n    ToastNotification\n} from \"carbon-components-react\";\nimport './form-comp.scss';\n\ninterface FormCompProps {\n    confFun: Function,\n    initialData: any,\n    status: number\n}\n\nclass FormComp extends Component<FormCompProps, {}> {\n\n    rankItems = ['Cadet', 'Lance Corporal', 'Corporal', 'Sergeant', 'Company Quartermaster Sergeant',\n        'Junior Under Officer', 'Senior Under Officer'];\n\n    departments = ['Aerospace Engineering', 'Biosciences and Bioengineering', 'Chemical Engineering', 'Chemistry',\n        'Civil Engineering', 'Computer Science & Engineering', 'Earth Sciences', 'Electrical Engineering',\n        'Energy Science and Engineering', 'Environmental Science and Engineering (ESED)',\n        'Humanities & Social Sciences', 'IDC School of Design', 'Mathematics', 'Mechanical Engineering',\n        'Metallurgical Engineering & Materials Science', 'Physics']\n\n    years = ['2015', '2016', '2017', '2018', '2019', '2020', '2021'];\n\n    formData = {\n        name: '',\n        rank: '',\n        dept: '',\n        mob: '',\n        email: '',\n        presAddr: '',\n        addrSame: false,\n        permAddr: '',\n        trStart: '',\n        trEnd: '',\n        cert: '',\n        job: ''\n    }\n\n    status = -1;\n    notifContent = '';\n    notifTimeout = setTimeout(() => {\n    }, 0);\n\n    goToConfirmation() {\n        if (this.status !== 0) return;\n        // if (this.formData.name === '') {\n        //     this.notifContent = 'Enter a valid name.';\n        // } else if (this.formData.rank === '') {\n        //     this.notifContent = 'Select a rank.';\n        // } else if (this.formData.dept === '') {\n        //     this.notifContent = 'Select a department.';\n        // } else if (!/^[0-9]{10}$/.test(this.formData.mob)) {\n        //     this.notifContent = 'Enter a valid 10-digit mobile number without the country code.';\n        // } else if (!/^[^\\s@]+@[^\\s@]+$/.test(this.formData.email)) {\n        //     this.notifContent = 'Enter a valid email addresss.';\n        // } else if (this.formData.presAddr === '') {\n        //     this.notifContent = 'Present Address field is required.';\n        // } else if (!this.formData.addrSame && this.formData.permAddr === '') {\n        //     this.notifContent = 'Permanent Address field is required.';\n        // } else if (this.formData.trStart === '' || this.formData.trEnd === '') {\n        //     this.notifContent = 'Enter a valid training period.';\n        // } else if (this.formData.cert === '') {\n        //     this.notifContent = 'Select your NCC certificates.';\n        // } else if (this.formData.job === '') {\n        //     this.notifContent = 'Enter your present job.';\n        // }\n\n        if (this.notifContent !== '') {\n            clearTimeout(this.notifTimeout);\n            this.notifTimeout = setTimeout(() => {\n                this.notifContent = '';\n                this.forceUpdate();\n            }, 3000);\n            this.forceUpdate();\n        } else {\n            clearTimeout(this.notifTimeout);\n            this.props.confFun(this.formData);\n            this.status = 1;\n        }\n    }\n\n    render() {\n        if (this.status === -1) {\n            if (this.props.status === 2) this.formData = this.props.initialData;\n            this.status = 0;\n        }\n        return <Form>\n            <FormGroup legendText=''>\n                <TextInput id='name' labelText='Name'\n                           onChange={(e) => this.formData.name = e.target.value}\n                           defaultValue={this.formData.name}/>\n            </FormGroup>\n            <FormGroup legendText=''>\n                <Dropdown id='rank' items={this.rankItems} label='Select your rank'\n                          titleText='Rank at NCC'\n                          onChange={(e) => this.formData.rank = (e.selectedItem as string)}\n                          initialSelectedItem={this.formData.rank}/>\n            </FormGroup>\n            <FormGroup legendText=''>\n                <Dropdown id='dept' items={this.departments} label={'Select your department'}\n                          titleText='Academic Department'\n                          onChange={(e) => this.formData.dept = (e.selectedItem as string)}\n                          initialSelectedItem={this.formData.dept}/>\n            </FormGroup>\n            <FormGroup legendText=''>\n                <TextInput id='num' minLength={10} maxLength={10} labelText='Mobile Number'\n                           type='number' invalidText=\"Enter a valid mobile number without the country code.\"\n                           onChange={(e) => this.formData.mob = e.target.value}\n                           defaultValue={this.formData.mob}/>\n            </FormGroup>\n            <FormGroup legendText=''>\n                <TextInput id='email' labelText='Email Address' type='email' invalidText='Enter a vaild email address.'\n                           onChange={(e) => this.formData.email = e.target.value}\n                           defaultValue={this.formData.email}/>\n            </FormGroup>\n            <FormGroup legendText=''>\n                <TextArea labelText='Present Address' rows={3}\n                          onChange={(e) => this.formData.presAddr = e.target.value}\n                          defaultValue={this.formData.presAddr}/>\n            </FormGroup>\n            <FormGroup legendText=''>\n                <Checkbox id='addr-check' labelText='Permanent Address is the same as the Present Address'\n                          onChange={(e: boolean) => {\n                              this.formData.addrSame = e;\n                              this.forceUpdate();\n                          }} defaultChecked={this.formData.addrSame}/>\n            </FormGroup>\n            {this.formData.addrSame ? null : <FormGroup legendText=''>\n                <TextArea labelText='Permanent Address' rows={3}\n                          onChange={(e) => this.formData.permAddr = e.target.value}\n                          defaultValue={this.formData.permAddr}/>\n            </FormGroup>}\n            <FormGroup legendText='NCC Training Period'>\n                <Dropdown type='inline' id='start-year' items={this.years.slice(0, -1)} label='Select Year'\n                          titleText='From' onChange={e => {\n                    this.formData.trStart = e.selectedItem as string;\n                    this.forceUpdate();\n                }\n                } initialSelectedItem={this.formData.trStart}/>\n                &nbsp;&nbsp;&nbsp;\n                {this.formData.trStart === '' ? null :\n                    <Dropdown type='inline' id='end-year' items={(() => {\n                        const index = this.years.indexOf(this.formData.trStart);\n                        return this.years.slice(index + 1, index + 4);\n                    })()} label='Select Year'\n                              titleText='To' onChange={e => this.formData.trEnd = e.selectedItem as string}\n                              initialSelectedItem={this.formData.trEnd}/>}\n            </FormGroup>\n            <FormGroup legendText=''>\n                <Dropdown id='cert' items={['None', 'B Certificate', 'C Certificate']} label='Select certificates'\n                          titleText='Certificates' onChange={e => this.formData.cert = e.selectedItem as string}\n                          initialSelectedItem={this.formData.cert}/>\n            </FormGroup>\n            <FormGroup legendText=''>\n                <TextInput id='job' labelText='Present Job' onChange={e => this.formData.job = e.target.value}\n                           defaultValue={this.formData.job}/>\n            </FormGroup>\n            <FormGroup legendText='' style={{textAlign: 'right'}}>\n                <Button type='submit' size='small' onClick={(e) => {\n                    e.preventDefault();\n                    this.goToConfirmation();\n                }} disabled={this.notifContent !== ''}>Submit</Button>\n            </FormGroup>\n            <div style={{position: 'fixed', bottom: '20px', right: '20px'}}>\n                {this.notifContent === '' ? null :\n                    <ToastNotification hideCloseButton={true} title={this.notifContent}/>}\n            </div>\n        </Form>;\n    }\n}\n\nexport default FormComp;","import React from 'react';\nimport './App.css';\nimport logo from './ncclogo.svg';\nimport logo2 from './ncciitb.svg';\nimport {Button, FormGroup, Header} from \"carbon-components-react\";\nimport Confirm from \"./components/confirm/confirm\";\nimport FormComp from \"./components/form/form-comp\";\n\nclass App extends React.Component {\n\n    state = {\n        status: 0,\n        formData: {}\n    }\n\n    submitForm() {\n        if (this.state.status !== 1 && this.state.status !== 5) return;\n        const url = 'http://20.98.225.74:443//register.php';\n        const newState = JSON.parse(JSON.stringify(this.state));\n        newState.status = 3;\n        this.setState(newState);\n\n        fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(this.state.formData)\n        }).then(async response => {\n            const data = await response.json();\n            console.log('Success');\n            console.log(data);\n            if (data.status === 1) {\n                this.setState({status: 4, formData: this.state.formData});\n            }\n        }).catch(error => {\n            console.error('Error');\n            this.setState({status: 5, formData: this.state.formData});\n        });\n    }\n\n    render() {\n        return (\n            <div className='App'>\n                <Header style={{position: 'sticky', top: 0, height: '6em'}} aria-label=''>\n                    <img alt='NCC Logo' src={logo}\n                         style={{width: '45px', position: 'fixed', left: '20px', top: '10px'}}/>\n                    <div style={{\n                        margin: '0 auto',\n                        textAlign: 'center',\n                        color: '#ffffff',\n                        lineHeight: '1.5em',\n                        fontSize: '1.5em'\n                    }}>\n                        2 MER NCC<br/><span style={{fontWeight: 'bold'}}>Alumni Registration</span>\n                    </div>\n                    <img alt='NCC Logo' src={logo2}\n                         style={{width: '90px', position: 'fixed', right: '10px', top: '0'}}/>\n                </Header>\n                <div className=\"form\" style={{padding: '30px 0'}}>\n                    {this.state.status === 0 || this.state.status === 2 ? <FormComp confFun={(data: any) => {\n                            this.setState({status: 1, formData: data});\n                        }} initialData={this.state.formData} status={this.state.status}/>\n                        : this.state.status === 1 ? <Confirm formData={this.state.formData} editForm={() => {\n                            const newState = JSON.parse(JSON.stringify(this.state));\n                            newState.status = 2;\n                            this.setState(newState);\n                        }} confirmSub={() => {\n                            this.submitForm();\n                        }}/> : this.state.status === 3 ?\n                            <div style={{fontSize: '1.1em', textAlign: 'center', marginTop: '50px'}}>\n                                Submitting...\n                            </div>\n                            : this.state.status === 4 ?\n                                <div style={{fontSize: '1.1em', textAlign: 'center', marginTop: '50px'}}>\n                                    {/* @ts-ignore */}\n                                    You have been registered successfully. You can now close the tab.\n                                </div>\n                                :\n                                <div style={{fontSize: '1.1em', textAlign: 'center', marginTop: '50px'}}>\n                                    <span style={{color: '#880000'}}>Registration failed.</span> Kindly check your\n                                    internet connection and the validity of the data you have entered.\n                                    <FormGroup legendText='' style={{marginTop: '25px'}}>\n                                        <Button kind='secondary' size='small' onClick={() => {\n                                            this.setState({status: 2, formData: this.state.formData});\n                                        }}>Edit the Form</Button>\n                                        &nbsp;\n                                        <Button size='small' onClick={() => {\n                                            this.setState({status: 3, formData: this.state.formData});\n                                            this.submitForm();\n                                        }}>Retry Submission</Button>\n                                    </FormGroup>\n                                </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}