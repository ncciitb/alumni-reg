{"version":3,"sources":["nccimg1.svg","ncciitb.svg","components/confirm/confirm.tsx","components/form/form-comp.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Confirm","state","fields","name","rank","college","dept","mob","email","presAddr","permAddr","trPeriod","cert","job","remarks","columns","style","marginBottom","Table","size","TableHead","TableRow","this","map","col","TableHeader","TableBody","Object","keys","key","props","formData","TableCell","fontWeight","addrSame","trStart","trEnd","FormGroup","legendText","textAlign","marginTop","Button","kind","onClick","editForm","type","e","preventDefault","confirmSub","Component","FormComp","rankItems","colleges","years","ls","i","push","toString","status","notifContent","notifTimeout","setTimeout","test","clearTimeout","forceUpdate","confFun","initialData","Form","TextInput","id","labelText","onChange","target","value","defaultValue","Dropdown","items","label","titleText","selectedItem","initialSelectedItem","minLength","maxLength","invalidText","TextArea","rows","Checkbox","defaultChecked","slice","index","indexOf","goToConfirmation","disabled","position","bottom","right","hideCloseButton","title","App","newState","JSON","parse","stringify","setState","fetch","method","body","then","response","a","json","catch","console","error","className","Header","top","height","aria-label","alt","src","logo","width","left","margin","color","lineHeight","fontSize","logo2","padding","data","submitForm","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2f3c755.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/nccimg1.f503b01f.svg\";","export default __webpack_public_path__ + \"static/media/ncciitb.d7b29491.svg\";","import React, {Component} from \"react\";\nimport {\n    Button,\n    FormGroup,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableHeader,\n    TableRow\n} from \"carbon-components-react\";\n\ninterface ConfirmProps {\n    formData: any,\n    editForm: Function,\n    confirmSub: Function\n}\n\nclass Confirm extends Component<ConfirmProps, {}> {\n    state = {};\n\n    fields = {\n        name: 'Name',\n        rank: 'Rank at NCC',\n        college: 'College',\n        dept: 'Academic Department',\n        mob: 'Mobile Number',\n        email: 'Email Address',\n        presAddr: 'Present Address',\n        permAddr: 'Permanent Address',\n        trPeriod: 'Training Period',\n        cert: 'Certificates',\n        job: 'Present Job',\n        remarks: 'Remarks'\n    }\n\n    columns = ['Field', 'Your Entry'];\n\n    render() {\n        return <div>\n            <p style={{marginBottom: '2em'}}>\n                The data you have entered is as follows. Please confirm or edit the same.\n            </p>\n            <Table size='normal'>\n                <TableHead>\n                    <TableRow>\n                        {this.columns.map(col => (\n                            <TableHeader key={col}>{col}</TableHeader>\n                        ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {Object.keys(this.fields).map(key => {\n                        const t = this;\n                        return (\n                            key === 'remarks' && this.props.formData[key as keyof typeof t.props.formData] === '' ? null :\n                                (<TableRow key={key}>\n                                    <TableCell\n                                        style={{fontWeight: 'bold'}}>{this.fields[key as keyof typeof t.fields]}</TableCell>\n                                    <TableCell>{key === 'permAddr' ? (\n                                        (this.props.formData.addrSame ? this.props.formData.presAddr : this.props.formData.permAddr)\n                                    ) : key === 'trPeriod' ? (this.props.formData.trStart + ' to ' + this.props.formData.trEnd) :\n                                        this.props.formData[key as keyof typeof t.props.formData]}</TableCell>\n                                </TableRow>)\n\n                        );\n                    })}\n                </TableBody>\n            </Table>\n            <FormGroup legendText='' style={{textAlign: 'right', marginTop: '1em'}}>\n                <Button kind='secondary' size='small' onClick={this.props.editForm}>Edit</Button>\n                &nbsp;\n                <Button type='submit' size='small' onClick={e => {\n                    e.preventDefault();\n                    this.props.confirmSub();\n                }}>Confirm</Button>\n            </FormGroup>\n        </div>;\n    }\n}\n\nexport default Confirm;","import React, {Component} from \"react\";\nimport {\n    Button,\n    Checkbox,\n    Dropdown,\n    Form,\n    FormGroup,\n    TextArea,\n    TextInput,\n    ToastNotification\n} from \"carbon-components-react\";\nimport './form-comp.scss';\n\ninterface FormCompProps {\n    confFun: Function,\n    initialData: any,\n    status: number\n}\n\nclass FormComp extends Component<FormCompProps, {}> {\n\n    rankItems = ['Cadet', 'Lance Corporal', 'Corporal', 'Sergeant', 'Company Quartermaster Sergeant',\n        'Company Sergeant Major', 'Junior Under Officer', 'Senior Under Officer'];\n\n    // departments = ['Aerospace Engineering', 'Biosciences and Bioengineering', 'Chemical Engineering', 'Chemistry',\n    //     'Civil Engineering', 'Computer Science & Engineering', 'Earth Sciences', 'Electrical Engineering',\n    //     'Energy Science and Engineering', 'Environmental Science and Engineering (ESED)',\n    //     'Humanities & Social Sciences', 'IDC School of Design', 'Mathematics', 'Mechanical Engineering',\n    //     'Metallurgical Engineering & Materials Science', 'Physics']\n\n    colleges = ['IIT Bombay', 'DY Patil University', 'Doshi Vakil College of Engineering', 'Campus School',\n        'Kendriya Vidyalaya', 'AECS Tarapur'];\n\n    years = (() => {\n        const ls: string[] = [];\n        for (let i = 1964; i <= 2021; i++) {\n            ls.push(i.toString());\n        }\n        return ls;\n    })();\n\n    formData = {\n        name: '',\n        rank: '',\n        college: '',\n        dept: '',\n        mob: '',\n        email: '',\n        presAddr: '',\n        addrSame: false,\n        permAddr: '',\n        trStart: '',\n        trEnd: '',\n        cert: '',\n        job: '',\n        remarks: ''\n    }\n\n    status = -1;\n    notifContent = '';\n    notifTimeout = setTimeout(() => {\n    }, 0);\n\n    goToConfirmation() {\n        if (this.status !== 0) return;\n        if (this.formData.name === '') {\n            this.notifContent = 'Enter a valid name.';\n        } else if (this.formData.rank === '') {\n            this.notifContent = 'Select a rank.';\n        } else if (this.formData.college === '') {\n            this.notifContent = 'Select your college.';\n        } else if (this.formData.dept === '') {\n            this.notifContent = 'Select a department.';\n        } else if (!/^[0-9]{10}$/.test(this.formData.mob)) {\n            this.notifContent = 'Enter a valid 10-digit mobile number without the country code.';\n        } else if (!/^[^\\s@]+@[^\\s@]+$/.test(this.formData.email)) {\n            this.notifContent = 'Enter a valid email addresss.';\n        } else if (this.formData.presAddr === '') {\n            this.notifContent = 'Present Address field is required.';\n        } else if (!this.formData.addrSame && this.formData.permAddr === '') {\n            this.notifContent = 'Permanent Address field is required.';\n        } else if (this.formData.trStart === '' || this.formData.trEnd === '') {\n            this.notifContent = 'Enter a valid training period.';\n        } else if (this.formData.cert === '') {\n            this.notifContent = 'Select your NCC certificates.';\n        } else if (this.formData.job === '') {\n            this.notifContent = 'Enter your present job.';\n        }\n\n        if (this.notifContent !== '') {\n            clearTimeout(this.notifTimeout);\n            this.notifTimeout = setTimeout(() => {\n                this.notifContent = '';\n                this.forceUpdate();\n            }, 3000);\n            this.forceUpdate();\n        } else {\n            clearTimeout(this.notifTimeout);\n            this.props.confFun(this.formData);\n            this.status = 1;\n        }\n    }\n\n    render() {\n        if (this.status === -1) {\n            if (this.props.status === 2) this.formData = this.props.initialData;\n            this.status = 0;\n        }\n        return <Form>\n            <FormGroup legendText=''>\n                <TextInput id='name' labelText='Name'\n                           onChange={(e) => this.formData.name = e.target.value}\n                           defaultValue={this.formData.name}/>\n            </FormGroup>\n            <FormGroup legendText=''>\n                <Dropdown id='rank' items={this.rankItems} label='Select your rank'\n                          titleText='Rank at NCC'\n                          onChange={(e) => this.formData.rank = (e.selectedItem as string)}\n                          initialSelectedItem={this.formData.rank}/>\n            </FormGroup>\n            <FormGroup legendText=''>\n                <Dropdown id='college' items={this.colleges} label={'Select your alma mater'}\n                          titleText='College'\n                          onChange={(e) => this.formData.college = (e.selectedItem as string)}\n                          initialSelectedItem={this.formData.college}/>\n            </FormGroup>\n            <FormGroup legendText=''>\n                <TextInput id='dept' labelText='Academic Department'\n                           onChange={(e) => this.formData.dept = e.target.value}\n                           defaultValue={this.formData.dept}/>\n            </FormGroup>\n            <FormGroup legendText=''>\n                <TextInput id='num' minLength={10} maxLength={10} labelText='Mobile Number'\n                           type='number' invalidText=\"Enter a valid mobile number without the country code.\"\n                           onChange={(e) => this.formData.mob = e.target.value}\n                           defaultValue={this.formData.mob}/>\n            </FormGroup>\n            <FormGroup legendText=''>\n                <TextInput id='email' labelText='Email Address' type='email' invalidText='Enter a vaild email address.'\n                           onChange={(e) => this.formData.email = e.target.value}\n                           defaultValue={this.formData.email}/>\n            </FormGroup>\n            <FormGroup legendText=''>\n                <TextArea labelText='Present Address' rows={3}\n                          onChange={(e) => this.formData.presAddr = e.target.value}\n                          defaultValue={this.formData.presAddr}/>\n            </FormGroup>\n            <FormGroup legendText=''>\n                <Checkbox id='addr-check' labelText='Permanent Address is the same as the Present Address'\n                          onChange={(e: boolean) => {\n                              this.formData.addrSame = e;\n                              this.forceUpdate();\n                          }} defaultChecked={this.formData.addrSame}/>\n            </FormGroup>\n            {this.formData.addrSame ? null : <FormGroup legendText=''>\n                <TextArea labelText='Permanent Address' rows={3}\n                          onChange={(e) => this.formData.permAddr = e.target.value}\n                          defaultValue={this.formData.permAddr}/>\n            </FormGroup>}\n            <FormGroup legendText='NCC Training Period'>\n                <Dropdown type='inline' id='start-year' items={this.years.slice(0, -1)} label='Select Year'\n                          titleText='From' onChange={e => {\n                    this.formData.trStart = e.selectedItem as string;\n                    this.forceUpdate();\n                }\n                } initialSelectedItem={this.formData.trStart}/>\n                &nbsp;&nbsp;&nbsp;\n                {this.formData.trStart === '' ? null :\n                    <Dropdown type='inline' id='end-year' items={(() => {\n                        const index = this.years.indexOf(this.formData.trStart);\n                        return this.years.slice(index + 1, index + 4);\n                    })()} label='Select Year'\n                              titleText='To' onChange={e => this.formData.trEnd = e.selectedItem as string}\n                              initialSelectedItem={this.formData.trEnd}/>}\n            </FormGroup>\n            <FormGroup legendText=''>\n                <Dropdown id='cert' items={['None', 'B Certificate', 'C Certificate']} label='Select certificates'\n                          titleText='Certificates' onChange={e => this.formData.cert = e.selectedItem as string}\n                          initialSelectedItem={this.formData.cert}/>\n            </FormGroup>\n            <FormGroup legendText=''>\n                <TextInput id='job' labelText='Present Job' onChange={e => this.formData.job = e.target.value}\n                           defaultValue={this.formData.job}/>\n            </FormGroup>\n            <FormGroup legendText=''>\n                <TextArea labelText='Remarks (if any)' rows={3} onChange={e => this.formData.remarks = e.target.value}\n                          defaultValue={this.formData.remarks}/>\n            </FormGroup>\n            <FormGroup legendText='' style={{textAlign: 'right'}}>\n                <Button type='submit' size='small' onClick={(e) => {\n                    e.preventDefault();\n                    this.goToConfirmation();\n                }} disabled={this.notifContent !== ''}>Submit</Button>\n            </FormGroup>\n            <div style={{position: 'fixed', bottom: '20px', right: '20px'}}>\n                {this.notifContent === '' ? null :\n                    <ToastNotification hideCloseButton={true} title={this.notifContent}/>}\n            </div>\n        </Form>;\n    }\n}\n\nexport default FormComp;","import React from 'react';\nimport './App.css';\nimport logo from './nccimg1.svg';\nimport logo2 from './ncciitb.svg';\nimport {Button, FormGroup, Header} from \"carbon-components-react\";\nimport Confirm from \"./components/confirm/confirm\";\nimport FormComp from \"./components/form/form-comp\";\n\nclass App extends React.Component {\n\n    state = {\n        status: 0,\n        formData: {}\n    }\n\n    submitForm() {\n        if (this.state.status !== 1 && this.state.status !== 5) return;\n        const url = 'https://ncciitb.eastus2.cloudapp.azure.com/register.php';\n        const newState = JSON.parse(JSON.stringify(this.state));\n        newState.status = 3;\n        this.setState(newState);\n\n        fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(this.state.formData)\n        }).then(async response => {\n            const data = await response.json();\n            if (data.status === 1) {\n                this.setState({status: 4, formData: this.state.formData});\n            }\n        }).catch(() => {\n            console.error('Error');\n            this.setState({status: 5, formData: this.state.formData});\n        });\n    }\n\n    render() {\n        return (\n            <div className='App'>\n                <Header style={{position: 'sticky', top: 0, height: '6em'}} aria-label=''>\n                    <img alt='NCC Logo' src={logo}\n                         style={{width: '45px', position: 'fixed', left: '20px', top: '10px'}}/>\n                    <div style={{\n                        margin: '0 auto',\n                        textAlign: 'center',\n                        color: '#ffffff',\n                        lineHeight: '1.5em',\n                        fontSize: '1.5em'\n                    }}>\n                        2 MER NCC<br/><span style={{fontWeight: 'bold'}}>Alumni Registration</span>\n                    </div>\n                    <img alt='NCC Logo' src={logo2}\n                         style={{width: '90px', position: 'fixed', right: '10px', top: '0'}}/>\n                </Header>\n                <div className=\"form\" style={{padding: '30px 0'}}>\n                    {this.state.status === 0 || this.state.status === 2 ? <FormComp confFun={(data: any) => {\n                            this.setState({status: 1, formData: data});\n                        }} initialData={this.state.formData} status={this.state.status}/>\n                        : this.state.status === 1 ? <Confirm formData={this.state.formData} editForm={() => {\n                            const newState = JSON.parse(JSON.stringify(this.state));\n                            newState.status = 2;\n                            this.setState(newState);\n                        }} confirmSub={() => {\n                            this.submitForm();\n                        }}/> : this.state.status === 3 ?\n                            <div style={{fontSize: '1.1em', textAlign: 'center', marginTop: '50px'}}>\n                                Submitting...\n                            </div>\n                            : this.state.status === 4 ?\n                                <div style={{fontSize: '1.1em', textAlign: 'center', marginTop: '50px'}}>\n                                    {/* @ts-ignore */}\n                                    You have been registered successfully. You can now close the tab.\n                                </div>\n                                :\n                                <div style={{fontSize: '1.1em', textAlign: 'center', marginTop: '50px'}}>\n                                    <span style={{color: '#880000'}}>Registration failed.</span> Kindly check your\n                                    internet connection and the validity of the data you have entered.\n                                    <FormGroup legendText='' style={{marginTop: '25px'}}>\n                                        <Button kind='secondary' size='small' onClick={() => {\n                                            this.setState({status: 2, formData: this.state.formData});\n                                        }} style={{marginTop: '0.2em', width: '10em'}}>Edit the Form</Button>\n                                        &nbsp;\n                                        <Button size='small' onClick={() => {\n                                            this.setState({status: 3, formData: this.state.formData});\n                                            this.submitForm();\n                                        }} style={{marginTop: '0.2em', width: '10em'}}>Retry Submission</Button>\n                                    </FormGroup>\n                                </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}